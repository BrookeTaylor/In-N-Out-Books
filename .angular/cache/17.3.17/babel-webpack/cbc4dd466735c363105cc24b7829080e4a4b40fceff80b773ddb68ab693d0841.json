{"ast":null,"code":"// Add an import statement for the BookDetailsDialogComponent\nimport { BookDetailsDialogComponent } from '../book-details-dialog/book-details-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../books.service\";\nimport * as i2 from \"@angular/material/legacy-dialog\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/material/list\";\nimport * as i6 from \"@angular/material/progress-spinner\";\nfunction BookListComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"mat-spinner\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction BookListComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 5)(2, \"mat-card\")(3, \"mat-card-title\")(4, \"a\", 6);\n    i0.ɵɵlistener(\"click\", function BookListComponent_ng_container_5_Template_a_click_4_listener() {\n      const book_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.showBookDetails(book_r2.isbn));\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"mat-card-content\")(7, \"mat-list-item\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"mat-list-item\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"mat-list-item\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const book_r2 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(book_r2.title);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"ISBN: \", book_r2.isbn, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Pages: \", book_r2.numOfPages, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Authors: \", book_r2.authors, \"\");\n  }\n}\nexport let BookListComponent = /*#__PURE__*/(() => {\n  class BookListComponent {\n    /**\n     * Add the BooksService to the components constructor\n     *\n     * Add the MatDialog class to the components constructor\n     */\n    constructor(booksService, dialog) {\n      this.booksService = booksService;\n      this.dialog = dialog;\n      // Convert the books variable to an array of IBook\n      this.books = [];\n      // In the constructors body subscribe the getBooks() function\n      this.booksService.getBooks().subscribe(res => {\n        console.log(res);\n        for (let key in res) {\n          if (res.hasOwnProperty(key)) {\n            let authors = [];\n            if (res[key].details.authors) {\n              authors = res[key].details.authors.map(function (author) {\n                return author.name;\n              });\n            }\n            this.books.push({\n              isbn: res[key].details.isbn_13 ? res[key].details.isbn_13 : res[key].details.isbn_10,\n              title: res[key].details.title,\n              description: res[key].details.subtitle ? res[key].details.subtitle : 'N/A',\n              numOfPages: res[key].details.number_of_pages,\n              authors: authors\n            });\n          }\n        }\n      });\n    }\n    ngOnInit() {}\n    // Create a function called showBookDetails(isbn: string)\n    showBookDetails(isbn) {\n      // Replace the code that calls the getBook(isbn) function with a find function\n      this.book = this.books.find(book => book.isbn === isbn);\n      // console.log() the book object (we are doing this to test that\n      // the service is returning the correct book object)\n      console.log(this.book);\n      // create a dialogRef object and assign it to the dialog.open() function\n      const dialogRef = this.dialog.open(BookDetailsDialogComponent, {\n        /**\n         * In the body of the open() function create a new object literal\n         * called data and a nested object literal called book and assign it\n         * the book variable\n         */\n        data: {\n          book: this.book\n        },\n        disableClose: true,\n        width: '800px'\n      });\n      // Call the afterClosed() function and set the book variable to null\n      dialogRef.afterClosed().subscribe(result => {\n        if (result === 'confirm') {\n          this.book = null;\n        }\n      });\n    }\n    static {\n      this.ɵfac = function BookListComponent_Factory(t) {\n        return new (t || BookListComponent)(i0.ɵɵdirectiveInject(i1.BooksService), i0.ɵɵdirectiveInject(i2.MatLegacyDialog));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: BookListComponent,\n        selectors: [[\"app-book-list\"]],\n        decls: 6,\n        vars: 3,\n        consts: [[4, \"ngIf\"], [\"fxLayout\", \"column wrap\"], [\"fxFlex\", \"\", 1, \"green\"], [1, \"grid-container\"], [4, \"ngFor\", \"ngForOf\"], [1, \"grid-item\"], [3, \"click\"]],\n        template: function BookListComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵtemplate(0, BookListComponent_ng_container_0_Template, 2, 0, \"ng-container\", 0);\n            i0.ɵɵelementStart(1, \"div\", 1)(2, \"h2\", 2);\n            i0.ɵɵtext(3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"div\", 3);\n            i0.ɵɵtemplate(5, BookListComponent_ng_container_5_Template, 13, 4, \"ng-container\", 4);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"ngIf\", ctx.books.length === 0);\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate1(\"Top \", ctx.books.length, \" Favorite Books\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngForOf\", ctx.books);\n          }\n        },\n        dependencies: [i3.NgForOf, i3.NgIf, i4.MatCard, i4.MatCardContent, i4.MatCardTitle, i5.MatListItem, i6.MatProgressSpinner],\n        styles: [\"@charset \\\"UTF-8\\\";.a-link[_ngcontent-%COMP%]{text-decoration:none}.a-link[_ngcontent-%COMP%]:hover{text-decoration:underline;cursor:pointer}.grid-container[_ngcontent-%COMP%]{display:grid;grid-template-columns:auto auto auto;grid-gap:20px;padding:25px}.grid-container[_ngcontent-%COMP%]   mat-list-item[_ngcontent-%COMP%]{padding:20px;font-size:30px}.grid-container[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{text-decoration:underline}.grid-container[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{text-decoration:none;cursor:pointer}\"]\n      });\n    }\n  }\n  return BookListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}